{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","g1","g2","localeCompare","LENGTH","length","map","good","reverse","console","log","App","state","NONE","sortAlphabetically","setState","sortByLength","getRevers","getReset","this","className","type","classNames","onClick","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,OAASH,EAAGG,UAC7C,MAEF,QACEP,EAAaQ,KAAI,SAAAC,GAAI,OAAIA,KAW7B,OAPIV,GACFC,EAAaU,UAIfC,QAAQC,IAAId,EAAUC,GAEfC,G,SAtCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA8CE,IAAMmB,EAAb,4MACEC,MAAe,CACbf,YAAY,EACZD,SAAUJ,EAASqB,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEnB,SAAUJ,EAASO,WAPvC,EAUEiB,aAAe,WACb,EAAKD,SAAS,CAAEnB,SAAUJ,EAASY,UAXvC,EAcEa,UAAY,WACV,EAAKF,UAAS,SAAAH,GAAK,MAAK,CACtBf,YAAae,EAAMf,gBAhBzB,EAoBEqB,SAAW,WACT,EAAKH,SAAS,CAAElB,YAAY,EAAOD,SAAUJ,EAASqB,QArB1D,4CAwBE,WACE,MAAiCM,KAAKP,MAA9BhB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,kBACA,CACE,WAAY1B,IAAaJ,EAASO,UAGtCwB,QAASJ,KAAKL,mBARhB,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,qBACA,CACE,WAAY1B,IAAaJ,EAASY,SAGtCmB,QAASJ,KAAKH,aARhB,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,qBACA,CACE,YAA2B,IAAfzB,IAGhB0B,QAASJ,KAAKF,UARhB,sBAaErB,IAAaJ,EAASqB,MAAQhB,IAC9B,wBACEwB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,SAHhB,sBAUJ,6BACGxB,EAAkBD,EAAiB0B,KAAKP,OAAON,KAAI,SAAAC,GAAI,OACtD,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAlFpC,GAAyBiB,IAAMC,eC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2663c832.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      visibleGoods.map(good => good);\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  getRevers = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  getReset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info ',\n              {\n                'is-light': sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success ',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning ',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n            onClick={this.getRevers}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.getReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}